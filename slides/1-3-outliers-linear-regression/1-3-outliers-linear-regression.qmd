---
title: "Outliers in linear regression"
format: revealjs
---

```{r}
#| label: setup
#| include: false
library(gt)
library(openintro)
library(tidyverse)
library(tidymodels)
library(patchwork)
ggplot2::theme_set(ggplot2::theme_gray(base_size = 16))
```

## Outliers in regression

::: incremental
- Outliers are observations that fall far from the main cloud of points.

- They can be outlying in:
  - the $x$ direction,
  - the $y$ direction, or
  - both.

- However, being outlying in a univariate sense does **not** always mean being outlying from the **bivariate model**.

- Points that are in-line with the bivariate model usually do **not** influence the least squares line, even if they are extreme in $x$, $y$, or both.
:::

## Outliers and influence

::: columns
::: {.column width=55%}
```{r}
#| label: outliers-influence-1
#| echo: false
#| message: false
#| fig-asp: 0.7
#| fig-width: 10
d1 <- simulated_scatter |>
  filter(group == 24) |>
  mutate(outlier = if_else(y == min(y), TRUE, FALSE))
d2 <- simulated_scatter |>
  filter(group == 25) |>
  mutate(outlier = if_else(y == min(y), TRUE, FALSE))
d3 <- simulated_scatter |>
  filter(group == 26) |>
  mutate(outlier = if_else(y == max(y), TRUE, FALSE))

m1_aug <- augment(lm(y ~ x, data = d1)) |>
  mutate(outlier = if_else(y == min(y), TRUE, FALSE))

m2_aug <- augment(lm(y ~ x, data = d2)) |>
  mutate(outlier = if_else(y == min(y), TRUE, FALSE))

m3_aug <- augment(lm(y ~ x, data = d3)) |>
  mutate(outlier = if_else(y == max(y), TRUE, FALSE))

p_1 <- ggplot(d1, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point(
    data = d1 |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["red", "full"], stroke = 2
  ) +
  labs(title = "A") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(expand = expansion(mult = 0.12))


p_1_res <- ggplot(m1_aug, aes(x = .fitted, y = .resid)) +
  geom_point(alpha = 0.7, size = 2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(
    data = m1_aug |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["red", "full"], stroke = 2
  ) +
  labs(x = "Predicted y", y = "Residual") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))

p_2 <- ggplot(d2, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point(
    data = d2 |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["green", "full"], stroke = 2
  ) +
  labs(title = "B") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(expand = expansion(mult = 0.12))

p_2_res <- ggplot(m2_aug, aes(x = .fitted, y = .resid)) +
  geom_point(size = 2, alpha = 0.8) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(
    data = m2_aug |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["green", "full"], stroke = 2
  ) +
  labs(x = "Predicted y", y = "Residual") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))

p_3 <- ggplot(d3, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point(
    data = d3 |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["pink", "full"], stroke = 2
  ) +
  labs(title = "C") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(expand = expansion(mult = 0.12))

p_3_res <- ggplot(m3_aug, aes(x = .fitted, y = .resid)) +
  geom_point(size = 2, alpha = 0.8) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_point(
    data = m3_aug |> filter(outlier),
    size = 5, shape = "circle open",
    color = IMSCOL["pink", "full"], stroke = 2
  ) +
  labs(x = "Predicted y", y = "Residual") +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
  ) +
  scale_x_continuous(expand = expansion(mult = 0.12)) +
  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))

p_1 + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) +
  p_2 + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) + p_3 +
  p_1_res + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) +
  p_2_res + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) + p_3_res +
  plot_layout(ncol = 3, heights = c(2, 1))
```
:::
::: {.column width=45%}
::: incremental
- **A:** One outlier in the $y$ direction, also outlying in the bivariate model; slightly influences the regression line.
- **B:** One outlier on the right (outlying in $x$ and $y$, but not outlying in the bivariate model); close to the regression line and not influential.
- **C:** One point far from the cloud (outlying in $x$, $y$, and bivariate model); pulls the regression line upward, worsening fit for the main data.
:::
:::
:::

## Outliers and influence

::: columns
::: {.column width=55%}
```{r}
#| label: outliers-influence-2
#| echo: false
#| warning: false
#| fig-asp: 0.7
#| fig-width: 10
d4 <- simulated_scatter |>
  filter(group == 27)

d5 <- simulated_scatter |> filter(group == 28)
d6 <- simulated_scatter |> filter(group == 29)

m4_aug <- augment(lm(y ~ x, data = d4))
m5_aug <- augment(lm(y ~ x, data = d5))
m6_aug <- augment(lm(y ~ x, data = d6))

p_4 <- ggplot(d4, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE) +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  labs(title = "D")

p_4_res <- ggplot(m4_aug, aes(x = .fitted, y = .resid)) +
  geom_point(size = 2, alpha = 0.7) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(x = "Predicted y", y = "Residual") +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  ylim(-4, 4)

p_5 <- ggplot(d5, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE) +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  labs(title = "E")

p_5_res <- ggplot(m5_aug, aes(x = .fitted, y = .resid)) +
  geom_point(alpha = 0.7, size = 2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(x = "Predicted y", y = "Residual") +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  ylim(-4, 4)

p_6 <- ggplot(d6, aes(x = x, y = y)) +
  geom_point(size = 2, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE) +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  labs(title = "F")

p_6_res <- ggplot(m6_aug, aes(x = .fitted, y = .resid)) +
  geom_point(size = 2, alpha = 0.7) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(x = "Predicted y", y = "Residual") +
  theme(
        panel.grid = element_blank(),
        axis.text = element_blank(),
        panel.border = element_rect(colour = "gray", fill = NA, linewidth = 1)
    ) +
  ylim(-4, 4)

p_4 + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) +
  p_5 + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) + p_6 +
  p_4_res + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) +
  p_5_res + theme(plot.margin = unit(c(0, 10, 5, 0), "pt")) + p_6_res +
  plot_layout(ncol = 3, heights = c(2, 1))
```
:::
::: {.column width=45%}
::: incremental
- **D:** A secondary small cloud of four points (outlying in $x$ and bivariate model); strongly influences the regression line, creating poor fit.
- **E:** Outlier far right (outlying in $x$ and $y$); the regression line is largely controlled by this single point, imposing a trend where there is none.
- **F:** One outlier far away (outlying in $x$ and $y$), but in-line with the model; has little influence.
:::
:::
:::

## Types of outliers

::: incremental
- **Outliers:** Points or groups of points that stand out from the rest of the data.

- **Leverage points:** Points that fall horizontally away from the center of the cloud tend to pull harder on the line, so we call them points with **high leverage** or **leverage points**.

- **Influential points:** Outliers, generally high leverage points, that actually alter the slope or position of the regression line.
  - We say a point is influential if omitting it would substantially change the regression model.
:::

## Practical advice

::: incremental
- Test your analysis **with and without** outliers.

- Compare and discuss the impact of outliers on model fit.

- Present both models to stakeholders to choose the most reasonable interpretation.
:::

. . .

::: columns
::: {.column width=70%}
::: callout-warning
Removing outliers should only be done with strong justification -- excluding interesting or extreme cases can lead to misleading models, poor predictive performance, and flawed conclusions.
:::
:::
:::
