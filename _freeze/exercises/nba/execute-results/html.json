{
  "hash": "584e6dd0fcb09f81a40e893eea5bb838",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Multiple linear regression\nsubtitle: \"{{< fa book-open >}} Modeling Inference <br>{{< fa book >}} Data Science with R\"\nformat: live-html\nengine: knitr\nbibliography: references.bib\nwebr:\n  packages: \n    - tidyverse\n    - tidymodels\n    # - faraway\n    #- scales\n    #- ggridges\n    # - kableExtra\n  cell-options:\n    autorun: false\n  resources:\n    - https://raw.githubusercontent.com/data-science-with-r/modeling-inference/refs/heads/main/exercises/data/nba20222023.csv\n---\n\n\n<!-- begin: webr fodder -->\n\n::: {.cell}\n\n:::\n\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(\"readr.edition\" = 1)\nlibrary(tidyverse)\n# Read the CSV file directly from the URL\nnba <- read_csv(\"https://raw.githubusercontent.com/data-science-with-r/modeling-inference/refs/heads/main/exercises/data/nba20222023.csv\")\n```\n:::\n\n\n<!-- end: webr fodder -->\n\n# Getting Started\n\nProgramming exercises are designed to provide an opportunity for you to put what you learn in the videos and readings. These exercises feature interactive code cells which allow you to write, edit, and run R code without leaving your browser.\n\nWhen the ▶️ Run Code button turns to a solid color (with no flashing bubble indicating that the document is still loading), you can interact with the code cells!\n\n## Packages\n\nWe’ll use the **tidyverse** and **tidymodels** packages to make plots and fit models. We will also use the **kableExtra** package to put our output into nice and neat tables. These are already installed for you to use in this programming exercise, run the following code cell to load these packages.\n\n\n::: {.cell}\n\n:::\n\n\n## Motivation\n\nThe National Basketball Association (NBA) is a professional sports league that consists of 30 teams across the United States and Canada. In the early 2000s, NBA teams started to use advanced analytics to gain a competitive edge over their opponents. Teams employ the use of analytics to make data driven decisions on game strategy and business operations. In this programming exercise, we are going to work with NBA data to try and better understand the salary NBA players make.\n\n## Dataset information\n\nThis dataset consists of player per-game statistics for the NBA's 2022-23 season with player salary data. We are going to use just a subset of these variables in this programming exercise. The variables we will use can be seen below. The data key for the entire data set can be revealed below.\n\n\n::: {.cell}\n```{webr}\n#| label: load-nba-data\nnba <- read_csv(\"nba20222023.csv\") \n\nglimpse(nba)\n```\n:::\n\n\n| Variable | Description                                                       |\n|----------|-------------------------------------------------------------------|\n| Salary   | Yearly salary a NBA players make in USD                           |\n| Position | Position on the court the NBA player plays: PG, SG, SF, PF, and C |\n| Age      | Age of the player, rounded to the nearest year                    |\n\n\n::: {.callout-caution collapse=\"true\"}\n## Data key\n\nNeed to expand\n\n| Variable | Description                                                       |\n|----------|-------------------------------------------------------------------|\n| Salary   | Yearly salary a NBA players make in USD                           |\n| Position | Position on the court the NBA player plays: PG, SG, SF, PF, and C |\n| Age      | Age of the player, rounded to the nearest year                    |\n:::\n\nNow, let's explore these data!\n\n## Exploratory Data Analysis\n\n::: exercise\nBefore we fit a linear regression model, we are going to explore the data. Let' start with exploring our response variable of interest, cholesterol (`Salary`). Specifically, we are interested in the relationship between `Salary`, `Age`, and `Position`. Below, calculate the mean and standard deviation for your quantitative variables. In the same code, produce the count of each position.\n\n\n::: {.cell}\n```{webr}\n\n```\n:::\n\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnba |>\n  group_by(Position) |>\n  summarize(mean_salary = mean(Salary, na.rm = TRUE), \n            sd_salary = sd(Salary , na.rm = TRUE),\n            mean_age = mean(Age, na.rm = TRUE),\n            sd_age = sd(Age, na.rm = TRUE),\n            position_n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  Position mean_salary sd_salary mean_age sd_age position_n\n  <chr>          <dbl>     <dbl>    <dbl>  <dbl>      <int>\n1 C           7282722.  8983558.     26.3   4.48         91\n2 PF          8885045. 10897789.     26.6   4.78         86\n3 PG         11579573. 13889342.     26.2   4.35         77\n4 SF          8132253. 11055604.     25.6   3.64         91\n5 SG          6681301.  8308597.     24.7   3.85        115\n```\n\n\n:::\n:::\n\n:::\n\n## Visualizing the data\n\nWe are now going to plot our response variable `Salary` vs `Age` using a scatterplot. We are also going to color the points based on `Position`. The plot can be seen below.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](nba_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFrom the videos, we learned about two different times of multiple linear regression models that we could fit:\n\n**Additive models**: The relationship between x and y does not change based on z\n\n**Interaction models**: The relationship between x and y does change by z\n\n::: exercise\n(Thought exercise) Based on these definitions, do you think it would be appropriate to fit an additive or interaction model?\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\nIt is justifiable to fit an interaction model instead of an additive model. Based on the scatterplot, we can see that the relationship between Salary and Age changes depending on the position the player plays.\n:::\n\nFor completeness, we are first going to fit an additive model. We are going to this to:\n\n-- Show that R will still fit the model, desipte it not being the most appropriate -- Practice fitting additive models -- Practice interpreting additive model output\n\n::: exercise\nFit the additive model below. Name this model `m1`, and wrap this object in the `tidy()` function. Next, interpret the estimate for `PositionPF` in the context of the problem.\n\n\n::: {.cell}\n```{webr}\n\n```\n:::\n\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(Salary ~ Age + Position, data = nba)\n\ntidy(m1) |>\n  select(term, estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  term          estimate\n  <chr>            <dbl>\n1 (Intercept) -20019456.\n2 Age           1038670.\n3 PositionPF    1307286.\n4 PositionPG    4391276.\n5 PositionSF    1602852.\n6 PositionSG    1095288.\n```\n\n\n:::\n:::\n\n\nAs an NBA player ages one year, we estimate a mean salary increase of 1,307,286 usd if they play PF.\n:::\n\n::: exercise\n(Thought exercise) What position do you not see a term for? Where is it?\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\nWe don't see a specific term for `C`. That is because it's our `(Intercept)` term! We can interpret the intercept as: For an age of, we estimate the mean salary of an NBA C to be -2,0019,456 usd. Each other position estimate is the estimated difference in `Salary` relative to the C, after controlling for Age!\n:::\n\nWe can change the intercept. See the following code that changes the intercept to `PG`, and notice how the estimates change based on what our intercept term is! Note: `Age` does not change, because the relationship between Salary and Age does not depend on Position.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnba_diff <- nba |>\n  mutate(Position = fct_relevel(Position, \"PG\"))\n\nm2 <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(Salary ~ Age + Position, data = nba_diff)\n\ntidy(m2) |>\n  select(term, estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  term          estimate\n  <chr>            <dbl>\n1 (Intercept) -15628180.\n2 Age           1038670.\n3 PositionC    -4391276.\n4 PositionPF   -3083990.\n5 PositionSF   -2788424.\n6 PositionSG   -3295988.\n```\n\n\n:::\n:::\n\n\n#### Interaction model\n\n::: exercise\nNow, it's time to fit the interaction model between `Salary`, `Age`, and `Position`. Please do so below, and interpret the Age:PositionPF interaction term.\n\n\n::: {.cell}\n```{webr}\n\n```\n:::\n\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm3 <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(Salary ~ Age * Position, data = nba)\n\ntidy(m3) |>\n  select(term, estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   term             estimate\n   <chr>               <dbl>\n 1 (Intercept)     -3607189.\n 2 Age               414290.\n 3 PositionPF     -13289313.\n 4 PositionPG     -29720679.\n 5 PositionSF     -26887800.\n 6 PositionSG     -11312489.\n 7 Age:PositionPF    556044.\n 8 Age:PositionPG   1300074.\n 9 Age:PositionSF   1096922.\n10 Age:PositionSG    461940.\n```\n\n\n:::\n:::\n\n\nFor a Power Forward, a one-year increase in age, we estimate on average an increase in salary of approximately 970,334 usd.\n\nWhy 970,334? The term Age:PositionPF has a coefficient of 556,044. This is the estiamted difference in the slope coefficient vs the Center position. Thus, the slope coefficient specifically for the PF position is estimated to be 414,290 larger than the baseline.\n:::\n\n#### Your Turn\n",
    "supporting": [
      "nba_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}