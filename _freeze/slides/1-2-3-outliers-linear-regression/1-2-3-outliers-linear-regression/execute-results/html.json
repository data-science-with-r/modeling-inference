{
  "hash": "f977b6d133de84bb2b6a8efb2fbb644b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Outliers in linear regression\"\nformat: revealjs\n---\n\n\n\n## Outliers in regression\n\n- Outliers are observations that fall far from the main cloud of points.\n\n- They can be outlying in:\n  - the $x$ direction,\n  - the $y$ direction, or\n  - both.\n\n- However, being outlying in a univariate sense does **not** always mean being outlying from the **bivariate model**.\n\n- Points that are in-line with the bivariate model usually do **not** influence the least squares line, even if they are extreme in $x$, $y$, or both.\n\n## Outliers and influence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd1 <- simulated_scatter |>\n  filter(group == 24) |>\n  mutate(outlier = if_else(y == min(y), TRUE, FALSE))\nd2 <- simulated_scatter |>\n  filter(group == 25) |>\n  mutate(outlier = if_else(y == min(y), TRUE, FALSE))\nd3 <- simulated_scatter |>\n  filter(group == 26) |>\n  mutate(outlier = if_else(y == max(y), TRUE, FALSE))\n\nm1_aug <- augment(lm(y ~ x, data = d1)) |>\n  mutate(outlier = if_else(y == min(y), TRUE, FALSE))\n\nm2_aug <- augment(lm(y ~ x, data = d2)) |>\n  mutate(outlier = if_else(y == min(y), TRUE, FALSE))\n\nm3_aug <- augment(lm(y ~ x, data = d3)) |>\n  mutate(outlier = if_else(y == max(y), TRUE, FALSE))\n\np_1 <- ggplot(d1, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(\n    data = d1 |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"red\", \"full\"], stroke = 2\n  ) +\n  labs(title = \"A\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(expand = expansion(mult = 0.12))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `size` argument of `element_rect()` is deprecated as of\nggplot2 3.4.0.\nâ„¹ Please use the `linewidth` argument instead.\n```\n\n\n:::\n\n```{.r .cell-code}\np_1_res <- ggplot(m1_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(alpha = 0.7, size = 2) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  geom_point(\n    data = m1_aug |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"red\", \"full\"], stroke = 2\n  ) +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))\n\np_2 <- ggplot(d2, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(\n    data = d2 |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"green\", \"full\"], stroke = 2\n  ) +\n  labs(title = \"B\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(expand = expansion(mult = 0.12))\n\np_2_res <- ggplot(m2_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(size = 2, alpha = 0.8) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  geom_point(\n    data = m2_aug |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"green\", \"full\"], stroke = 2\n  ) +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))\n\np_3 <- ggplot(d3, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_point(\n    data = d3 |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"pink\", \"full\"], stroke = 2\n  ) +\n  labs(title = \"C\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(expand = expansion(mult = 0.12))\n\np_3_res <- ggplot(m3_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(size = 2, alpha = 0.8) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  geom_point(\n    data = m3_aug |> filter(outlier),\n    size = 5, shape = \"circle open\",\n    color = IMSCOL[\"pink\", \"full\"], stroke = 2\n  ) +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n    panel.grid = element_blank(),\n    axis.text = element_blank(),\n    panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n  ) +\n  scale_x_continuous(expand = expansion(mult = 0.12)) +\n  scale_y_continuous(limits = c(-8, 8), expand = expansion(mult = 0.12))\n\np_1 + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) +\n  p_2 + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) + p_3 +\n  p_1_res + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) +\n  p_2_res + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) + p_3_res +\n  plot_layout(ncol = 3, heights = c(2, 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1-2-3-outliers-linear-regression_files/figure-revealjs/outliers-influence-1-1.png){width=768}\n:::\n:::\n\n\n::: incremental\n- **A:** One outlier in the $y$ direction, also outlying in the bivariate model; slightly influences the regression line.\n- **B:** One outlier on the right (outlying in $x$ and $y$, but not outlying in the bivariate model); close to the regression line and not influential.\n- **C:** One point far from the cloud (outlying in $x$, $y$, and bivariate model); pulls the regression line upward, worsening fit for the main data.\n:::\n\n## Outliers and influence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd4 <- simulated_scatter |>\n  filter(group == 27)\n\nd5 <- simulated_scatter |> filter(group == 28)\nd6 <- simulated_scatter |> filter(group == 29)\n\nm4_aug <- augment(lm(y ~ x, data = d4))\nm5_aug <- augment(lm(y ~ x, data = d5))\nm6_aug <- augment(lm(y ~ x, data = d6))\n\np_4 <- ggplot(d4, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  labs(title = \"D\")\n\np_4_res <- ggplot(m4_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(size = 2, alpha = 0.7) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  ylim(-4, 4)\n\np_5 <- ggplot(d5, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  labs(title = \"E\")\n\np_5_res <- ggplot(m5_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(alpha = 0.7, size = 2) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  ylim(-4, 4)\n\np_6 <- ggplot(d6, aes(x = x, y = y)) +\n  geom_point(size = 2, alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  labs(title = \"F\")\n\np_6_res <- ggplot(m6_aug, aes(x = .fitted, y = .resid)) +\n  geom_point(size = 2, alpha = 0.7) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(x = \"Predicted y\", y = \"Residual\") +\n  theme(\n        panel.grid = element_blank(),\n        axis.text = element_blank(),\n        panel.border = element_rect(colour = \"gray\", fill = NA, size = 1)\n    ) +\n  ylim(-4, 4)\n\np_4 + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) +\n  p_5 + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) + p_6 +\n  p_4_res + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) +\n  p_5_res + theme(plot.margin = unit(c(0, 10, 5, 0), \"pt\")) + p_6_res +\n  plot_layout(ncol = 3, heights = c(2, 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside\nthe scale range (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1-2-3-outliers-linear-regression_files/figure-revealjs/outliers-influence-2-1.png){width=768}\n:::\n:::\n\n\n::: incremental\n- **D:** A secondary small cloud of four points (outlying in $x$ and bivariate model); strongly influences the regression line, creating poor fit.\n- **E:** Outlier far right (outlying in $x$ and $y$); the regression line is largely controlled by this single point, imposing a trend where there is none.\n- **F:** One outlier far away (outlying in $x$ and $y$), but in-line with the model; has little influence.\n:::\n\n## Types of outliers\n\n\n- **Outliers:** Points or groups of points that stand out from the rest of the data.\n\n- **Leverage points:** Points that fall horizontally away from the center of the cloud tend to pull harder on the line, so we call them points with **high leverage** or **leverage points**.\n\n- **Influential points:** Outliers, generally high leverage points, that actually alter the slope or position of the regression line.\n  - We say a point is influential if omitting it would substantially change the regression model.\n\n## Practical advice\n\n::: incremental\n- Test your analysis **with and without** outliers.\n\n- Compare and discuss the impact of outliers on model fit.\n\n- Present both models to stakeholders to choose the most reasonable interpretation.\n:::\n\n. . .\n\n::: callout-warning\nRemoving outliers should only be done with strong justification -- excluding interesting or extreme cases can lead to misleading models, poor predictive performance, and flawed conclusions.\n:::\n",
    "supporting": [
      "1-2-3-outliers-linear-regression_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}