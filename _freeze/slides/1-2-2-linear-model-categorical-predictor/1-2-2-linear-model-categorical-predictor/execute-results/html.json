{
  "hash": "c923dd37ffad6cfcbb7760b31312b173",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear model with a categorical predictor\"\nformat: revealjs\n---\n\n\n\n\n\n# Packages, data, variables\n\n## Packages\n\n- **palmerpenguins** for data\n- **tidyverse** for data wrangling and visualization\n- **tidymodels** for modeling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n:::\n\n\n## Data: `penguins`\n\nWe'll work with the `penguins` dataset from the **palmerpenguins** package, which contains information on \n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 7\n   species island    bill_length_mm bill_depth_mm\n   <fct>   <fct>              <dbl>         <dbl>\n 1 Adelie  Torgersen           39.1          18.7\n 2 Adelie  Torgersen           39.5          17.4\n 3 Adelie  Torgersen           40.3          18  \n 4 Adelie  Torgersen           NA            NA  \n 5 Adelie  Torgersen           36.7          19.3\n 6 Adelie  Torgersen           39.3          20.6\n 7 Adelie  Torgersen           38.9          17.8\n 8 Adelie  Torgersen           39.2          19.6\n 9 Adelie  Torgersen           34.1          18.1\n10 Adelie  Torgersen           42            20.2\n# ℹ 334 more rows\n# ℹ 3 more variables: flipper_length_mm <int>,\n#   body_mass_g <int>, sex <fct>\n```\n\n\n:::\n:::\n\n\n## Variables\n\n::: task\nA researcher wants to study the relationship between body weights of penguins based on the island they were recorded on. How are the variables involved in this analysis different?\n:::\n\n. . .\n\n- Outcome: body weight (numerical)\n- Predictor: island (categorical)\n\n## Body weight vs. island\n\n::: task\nDetermine whether each of the following plot types would be an appropriate choice for visualizing the relationship between body weight and island of penguins.\n:::\n\n-   Scatterplot [❌]{.fragment}\n\n-   Box plot [✅]{.fragment}\n\n-   Violin plot [✅]{.fragment}\n\n-   Density plot [✅]{.fragment}\n\n-   Bar plot [❌]{.fragment}\n\n-   Stacked bar plot [❌]{.fragment}\n\n## Body weight vs. island\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  penguins, \n  aes(x = body_mass_g, y = island, color = island)\n  ) +\n  geom_boxplot(show.legend = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale\nrange (`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1-2-2-linear-model-categorical-predictor_files/figure-revealjs/bm-island-plot-1.png){width=768}\n:::\n:::\n\n\n# Modeling\n\n## Fitting the model\n\nLet's fit a model to predict body weight from island:\n\n. . .\n\n- Fit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbm_island_fit <- linear_reg() |>\n  fit(body_mass_g ~ island, data = penguins)\n```\n:::\n\n\n. . .\n\n- Tidy:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(bm_island_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term            estimate std.error statistic   p.value\n  <chr>              <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)        4716.      48.5      97.3 8.93e-250\n2 islandDream       -1003.      74.2     -13.5 1.42e- 33\n3 islandTorgersen   -1010.     100.      -10.1 4.66e- 21\n```\n\n\n:::\n:::\n\n\n## Inspecting the model output\n\n::: task\nWhy is Biscoe not on the output?\n::: \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term            estimate std.error statistic   p.value\n  <chr>              <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)        4716.      48.5      97.3 8.93e-250\n2 islandDream       -1003.      74.2     -13.5 1.42e- 33\n3 islandTorgersen   -1010.     100.      -10.1 4.66e- 21\n```\n\n\n:::\n:::\n\n\n. . .\n\n::: incremental\n- When fitting a model with a categorical predictor, the levels of the categorical predictor are encoded to **dummy variables**, except for one of the levels, the **baseline level**.\n\n- In this case Biscoe is the is the baseline level.\n\n- Each slope coefficient describes the predicted difference between heights in that particular school compared to the baseline level.\n:::\n\n## Dummy variables\n\n::: {.columns}\n::: {.column width=\"30%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"yvswizyfjr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yvswizyfjr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yvswizyfjr thead, #yvswizyfjr tbody, #yvswizyfjr tfoot, #yvswizyfjr tr, #yvswizyfjr td, #yvswizyfjr th {\n  border-style: none;\n}\n\n#yvswizyfjr p {\n  margin: 0;\n  padding: 0;\n}\n\n#yvswizyfjr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 24px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yvswizyfjr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yvswizyfjr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yvswizyfjr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yvswizyfjr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yvswizyfjr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yvswizyfjr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yvswizyfjr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yvswizyfjr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yvswizyfjr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yvswizyfjr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yvswizyfjr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yvswizyfjr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yvswizyfjr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yvswizyfjr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvswizyfjr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yvswizyfjr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yvswizyfjr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yvswizyfjr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvswizyfjr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yvswizyfjr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvswizyfjr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yvswizyfjr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvswizyfjr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yvswizyfjr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvswizyfjr .gt_left {\n  text-align: left;\n}\n\n#yvswizyfjr .gt_center {\n  text-align: center;\n}\n\n#yvswizyfjr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yvswizyfjr .gt_font_normal {\n  font-weight: normal;\n}\n\n#yvswizyfjr .gt_font_bold {\n  font-weight: bold;\n}\n\n#yvswizyfjr .gt_font_italic {\n  font-style: italic;\n}\n\n#yvswizyfjr .gt_super {\n  font-size: 65%;\n}\n\n#yvswizyfjr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yvswizyfjr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yvswizyfjr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yvswizyfjr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yvswizyfjr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yvswizyfjr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yvswizyfjr .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#yvswizyfjr .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#yvswizyfjr div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"island\">island</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"Dummy variable\">\n        <div class=\"gt_column_spanner\">Dummy variable</div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Dream\">Dream</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Torgersen\">Torgersen</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"island\" class=\"gt_row gt_left\">Biscoe</td>\n<td headers=\"Dream\" class=\"gt_row gt_right\">0</td>\n<td headers=\"Torgersen\" class=\"gt_row gt_right\">0</td></tr>\n    <tr><td headers=\"island\" class=\"gt_row gt_left\">Dream</td>\n<td headers=\"Dream\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Torgersen\" class=\"gt_row gt_right\">0</td></tr>\n    <tr><td headers=\"island\" class=\"gt_row gt_left\">torgersen</td>\n<td headers=\"Dream\" class=\"gt_row gt_right\">0</td>\n<td headers=\"Torgersen\" class=\"gt_row gt_right\">1</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n:::\n::: {.column width=\"70%\" .fragment}\nFor a categorical predictor with $k$ levels, we only need $k - 1$ dummy variables to describe all of its levels:\n\n-  `Dream = 1` and `Torgersen = 0`, the penguin is from Dream island. \n-  `Dream = 0` and `Torgersen = 1`, the penguin is from Torgersen island. \n-  `Dream = 0` and `Torgersen = 0`, the penguin is from Biscoe island, we don't need a third dummy variable to identify these penguins.\n:::\n:::\n\n## Dummy coding\n\n::: callout-note\nYou do not need to do anything (i.e., write code) to do the \"dummy coding\", R does this under the hood for you when you have a predictor that is categorical (a character or a factor).\n:::\n\n## Interpreting the model output\n\n$$\n\\widehat{body~mass} = 4716 - 1003 \\times islandDream - 1010 \\times islandTorgersen\n$$\n\n-   Intercept: [Penguins from Biscoe island are expected to weigh, on average, 4,716 grams.]{.fragment}\n\n-   Slope - islandDream: [Penguins from Dream island are expected to weigh, on average, 1,003 grams less than those from Biscoe island.]{.fragment}\n\n-   Slope - islandTorgersen: [Penguins from Torgersen island are expected to weigh, on average, 1,010 grams less than those from Biscoe island.]{.fragment}\n\n## Predicting based on the model\n\n$$\n\\widehat{body~mass} = 4716 - 1003 \\times islandDream - 1010 \\times islandTorgersen\n$$\n\n. . .\n\n-   Biscoe: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 0 = 4716$\n\n. . .\n\n-   Dream: $\\widehat{body~mass} = 4716 - 1003 \\times 1 - 1010 \\times 0 = 3713$\n\n. . .\n\n-   Torgersen: $\\widehat{body~mass} = 4716 - 1003 \\times 0 - 1010 \\times 1 = 3706$\n\n## Predicting based on the model - again\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_penguins <- tibble(\n  island = c(\"Biscoe\", \"Dream\", \"Torgersen\")\n  )\n\naugment(bm_island_fit, new_data = three_penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  .pred island   \n  <dbl> <chr>    \n1 4716. Biscoe   \n2 3713. Dream    \n3 3706. Torgersen\n```\n\n\n:::\n:::\n\n\n## Models with categorical predictors\n\n::: incremental\n-   When the categorical predictor has many levels, they're encoded to **dummy variables**.\n\n-   The first level of the categorical variable is the baseline level. In a model with one categorical predictor, the intercept is the predicted value of the outcome for the baseline level (x = 0).\n\n-   Each slope coefficient describes the difference between the predicted value of the outcome for that level of the categorical variable compared to the baseline level.\n:::\n",
    "supporting": [
      "1-2-2-linear-model-categorical-predictor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}