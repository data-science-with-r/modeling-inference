{
  "hash": "adb6155d1e296ea86b0b646c79740541",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear regression with a numerical predictor\"\nformat: revealjs\n---\n\n\n\n# Packages and data\n\n## Packages\n\n- **fivethirtyeight** for data\n- **tidyverse** for data wrangling and visualization\n- **tidymodels** for modeling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fivethirtyeight)\nlibrary(tidyverse)\nlibrary(tidymodels)\n```\n:::\n\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores <- fandango |>\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )\n```\n:::\n\n\n## Data overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores |>\n  select(critics, audience)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 146 Ã— 2\n   critics audience\n     <int>    <int>\n 1      74       86\n 2      85       80\n 3      80       90\n 4      18       84\n 5      14       28\n 6      63       62\n 7      42       53\n 8      86       64\n 9      99       82\n10      89       87\n# â„¹ 136 more rows\n```\n\n\n:::\n:::\n\n\n## Data visualization\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](1-2-1-linear-model-numerical-predictor_files/figure-revealjs/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\n# Regression model\n\n## Regression model\n\nA **regression model** is a function that describes the relationship between the outcome, $Y$, and the predictor, $X$.\n\n$$\n\\begin{aligned} \nY &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \n\\end{aligned}\n$$\n\n## Regression model\n\n::::: columns\n::: {.column width=\"30%\"}\n$$\n\\begin{aligned} \nY &= \\color{#325b74}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{#325b74}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{#325b74}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \n\\end{aligned}\n$$\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](1-2-1-linear-model-numerical-predictor_files/figure-revealjs/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n:::\n:::::\n\n## Simple linear regression {.smaller}\n\nUse **simple linear regression** to model the relationship between a numerical outcome ($Y$) and a single numerical predictor ($X$): $$\\Large{Y = \\beta_0 + \\beta_1 X + \\epsilon}$$\n\n::: incremental\n-   $\\beta_1$: True slope of the relationship between $X$ and $Y$\n-   $\\beta_0$: True intercept of the relationship between $X$ and $Y$\n-   $\\epsilon$: Error (residual)\n:::\n\n## Simple linear regression\n\n$$\n\\Large{\\hat{Y} = b_0 + b_1 X}\n$$\n\n-   $b_1$: Estimated slope of the relationship between $X$ and $Y$\n-   $b_0$: Estimated intercept of the relationship between $X$ and $Y$\n-   No error term!\n\n## Choosing values for $b_1$ and $b_0$\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](1-2-1-linear-model-numerical-predictor_files/figure-revealjs/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\n## Residuals\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](1-2-1-linear-model-numerical-predictor_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n$$\n\\text{residual} = \\text{observed} - \\text{predicted} = y - \\hat{y}\n$$\n\n## Least squares line {.smaller}\n\n-   The residual for the $i^{th}$ observation is\n\n$$\ne_i = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i\n$$\n\n-   The **sum of squared** residuals is\n\n$$\ne^2_1 + e^2_2 + \\dots + e^2_n\n$$\n\n-   The **least squares line** is the one that **minimizes the sum of squared residuals**\n\n## Fitting a model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies_fit <- linear_reg() |>\n  fit(audience ~ critics, data = movie_scores)\n\ntidy(movies_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31\n```\n\n\n:::\n:::\n\n\n# Interpreting model output\n\n## Interpreting the slope {.smaller}\n\n::: task\nThe slope of the model for predicting audience score from critics score is 0.519.\nWhich of the following is the best interpretation of this value?\n:::\n\na.  For every one point increase in the critics score, the audience score goes up by 0.519 points, on average.\nb.  For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\nc.  For every one point increase in the critics score, the audience score goes up by 0.519 points.\nd.  For every one point increase in the audience score, the critics score goes up by 0.519 points, on average.\n\n## Interpreting slope & intercept\n\n$$\n\\widehat{\\text{audience}} = 32.3 + 0.519 \\times \\text{critics}\n$$\n\n::: incremental\n-   **Slope:** For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\n-   **Intercept:** If the critics score is 0 points, we expect the audience score to be 32.3 points.\n:::\n\n## Is the intercept meaningful?\n\nâœ… The intercept is meaningful in context of the data if\n\n-   the predictor can feasibly take values equal to or near zero or\n-   the predictor has values near zero in the observed data\n\n. . .\n\nðŸ›‘ Otherwise, it might not be meaningful!\n\n# Putting it altogether\n\n## Least squares regression\n\nThe least squares regression line minimizes the sum of squares residuals. It has the following properties:\n\n::: incremental\n-   Goes through the center of mass point (the coordinates corresponding to average $X$ and average $Y$): $b_0 = \\bar{Y} - b_1~\\bar{X}$\n\n-   Slope of the line has the same sign as the correlation coefficient: $b_1 = r \\frac{s_Y}{s_X}$\n\n-   Sum of the residuals is zero: $\\sum_{i = 1}^n \\epsilon_i = 0$\n\n-   Residuals and $X$ values are uncorrelated\n:::\n",
    "supporting": [
      "1-2-1-linear-model-numerical-predictor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}